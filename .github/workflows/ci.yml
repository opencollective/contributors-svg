name: CI

on: [push]

env:
  CI: true
  TZ: UTC
  NODE_ENV: test

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
      - name: Update apt
        run: sudo apt-get update || exit 0

      - name: Install graphicsmagick
        run: sudo apt-get install -y graphicsmagick

      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version-file: 'package.json'

      # Npm cache

      - name: Restore .npm cache
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-npm-cache-${{ github.sha }}
          restore-keys: |
            - ${{ runner.os }}-npm-cache-${{ github.sha }}
            - ${{ runner.os }}-npm-cache-

      - name: Restore node_modules
        uses: actions/cache@v2
        id: node-modules
        with:
          path: node_modules
          key: ${{ runner.os }}-node-modules-${{ hashFiles('package-lock.json') }}

      - name: Install dependencies
        if: steps.node-modules.outputs.cache-hit != 'true'
        run: npm ci --prefer-offline --no-audit

      - run: npm run lint:quiet

  prettier:
    runs-on: ubuntu-latest

    steps:
      - name: Update apt
        run: sudo apt-get update || exit 0

      - name: Install graphicsmagick
        run: sudo apt-get install -y graphicsmagick

      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version-file: 'package.json'

      # Npm cache

      - name: Restore .npm cache
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-npm-cache-${{ github.sha }}
          restore-keys: |
            - ${{ runner.os }}-npm-cache-${{ github.sha }}
            - ${{ runner.os }}-npm-cache-

      - name: Restore node_modules
        uses: actions/cache@v2
        id: node-modules
        with:
          path: node_modules
          key: ${{ runner.os }}-node-modules-${{ hashFiles('package-lock.json') }}

      - name: Install dependencies
        if: steps.node-modules.outputs.cache-hit != 'true'
        run: npm ci --prefer-offline --no-audit

      - run: npm run prettier:check
